
package ws_client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.1
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSOperaciones", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSOperaciones {


    /**
     * 
     * @param foto
     * @param carrera
     * @param semestre
     * @param nombre
     * @param edad
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "CrearEstudiante")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CrearEstudiante", targetNamespace = "http://ws/", className = "ws_client.CrearEstudiante")
    @ResponseWrapper(localName = "CrearEstudianteResponse", targetNamespace = "http://ws/", className = "ws_client.CrearEstudianteResponse")
    @Action(input = "http://ws/WSOperaciones/CrearEstudianteRequest", output = "http://ws/WSOperaciones/CrearEstudianteResponse")
    public boolean crearEstudiante(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "edad", targetNamespace = "")
        int edad,
        @WebParam(name = "carrera", targetNamespace = "")
        String carrera,
        @WebParam(name = "semestre", targetNamespace = "")
        int semestre,
        @WebParam(name = "foto", targetNamespace = "")
        byte[] foto);

    /**
     * 
     * @param foto
     * @param id
     * @param carrera
     * @param semestre
     * @param nombre
     * @param edad
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "ActualizarEstudiante")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ActualizarEstudiante", targetNamespace = "http://ws/", className = "ws_client.ActualizarEstudiante")
    @ResponseWrapper(localName = "ActualizarEstudianteResponse", targetNamespace = "http://ws/", className = "ws_client.ActualizarEstudianteResponse")
    @Action(input = "http://ws/WSOperaciones/ActualizarEstudianteRequest", output = "http://ws/WSOperaciones/ActualizarEstudianteResponse")
    public boolean actualizarEstudiante(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "edad", targetNamespace = "")
        int edad,
        @WebParam(name = "carrera", targetNamespace = "")
        String carrera,
        @WebParam(name = "semestre", targetNamespace = "")
        int semestre,
        @WebParam(name = "foto", targetNamespace = "")
        byte[] foto);

    /**
     * 
     * @return
     *     returns java.util.List<ws_client.Estudiante>
     */
    @WebMethod(operationName = "ObtenerEstudiantes")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ObtenerEstudiantes", targetNamespace = "http://ws/", className = "ws_client.ObtenerEstudiantes")
    @ResponseWrapper(localName = "ObtenerEstudiantesResponse", targetNamespace = "http://ws/", className = "ws_client.ObtenerEstudiantesResponse")
    @Action(input = "http://ws/WSOperaciones/ObtenerEstudiantesRequest", output = "http://ws/WSOperaciones/ObtenerEstudiantesResponse")
    public List<Estudiante> obtenerEstudiantes();

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EliminarEstudiante")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarEstudiante", targetNamespace = "http://ws/", className = "ws_client.EliminarEstudiante")
    @ResponseWrapper(localName = "EliminarEstudianteResponse", targetNamespace = "http://ws/", className = "ws_client.EliminarEstudianteResponse")
    @Action(input = "http://ws/WSOperaciones/EliminarEstudianteRequest", output = "http://ws/WSOperaciones/EliminarEstudianteResponse")
    public boolean eliminarEstudiante(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
